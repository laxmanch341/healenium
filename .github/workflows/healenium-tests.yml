name: Healenium Tests

on: [push, workflow_dispatch]

env:
  POSTGRES_DB: healenium
  POSTGRES_USER: healenium_user
  POSTGRES_PASSWORD: YDk2nmNs4s9aCP6K
  SPRING_POSTGRES_DB_HOST: postgres-db
  HLM_LOG_LEVEL: info

jobs:
  healenium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose chromium-driver postgresql-client
          export CHROME_BIN=/usr/bin/chromium-browser
          export CHROMEDRIVER_PATH=/usr/bin/chromedriver

      - name: Cache database backup
        uses: actions/cache@v4
        id: db-cache
        with:
          path: db_dump/backup.sql
          key: db-backup-${{ github.ref }}

      - name: Start Healenium services
        run: |
          cd infra
          docker-compose up -d
          cd ..

      - name: Wait for services
        run: sleep 5

      - name: Restore database from backup
        run: |
          mkdir -p db_dump
          if [ -f db_dump/backup.sql ]; then
            echo "üóÉÔ∏è Restoring database from backup.sql..."
            docker exec postgres-db bash -c "psql -U $POSTGRES_USER -d $POSTGRES_DB" < db_dump/backup.sql
          else
            echo "üöÄ First run - no backup found. Starting fresh."
          fi

      - name: Initialize database schema and counter
        run: |
          echo "üîß Setting up schema and counter table..."
          docker exec postgres-db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "CREATE SCHEMA IF NOT EXISTS healenium AUTHORIZATION $POSTGRES_USER;"
          docker exec postgres-db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "CREATE TABLE IF NOT EXISTS healenium.run_counter (run_id SERIAL PRIMARY KEY, run_time TIMESTAMP DEFAULT now());"
          docker exec postgres-db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "INSERT INTO healenium.run_counter DEFAULT VALUES;"

      - name: Show run counter
        run: |
          echo "üü¢ Total number of pipeline runs so far:"
          docker exec postgres-db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT COUNT(*) AS total_runs FROM healenium.run_counter;"
          echo "üïí Last 5 pipeline runs:"
          docker exec postgres-db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT * FROM healenium.run_counter ORDER BY run_id DESC LIMIT 5;"

      - name: Run tests
        run: |
          # mvn clean test
          echo "‚úÖ Tests would run here"

      - name: Dump database state
        run: |
          echo "üíæ Dumping PostgreSQL database to backup.sql..."
          docker exec postgres-db bash -c "pg_dump -U $POSTGRES_USER -d $POSTGRES_DB" > db_dump/backup.sql

      - name: Stop Healenium services
        run: |
          cd infra
          docker-compose down
          cd ..

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            target/surefire-reports/
            healing.json
            db_dump/backup.sql
          retention-days: 7
